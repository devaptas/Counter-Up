(function($){"use strict";$.fn.counterUp=function(options){var settings=$.extend({'time':400,'delay':10,'from':0,'formatter':!1},options);return this.each(function(){var $this=$(this);var $settings=settings;var counterUpper=function(){var nums=[];var divisions=$settings.time/$settings.delay;var num=$this.attr('data-num')?$this.attr('data-num'):$this.text();var isComma=/[0-9]+,[0-9]+/.test(num);num=num.replace(/,/g,'');var isInt=/^[0-9]+$/.test(num);var isFloat=/^[0-9]+\.[0-9]+$/.test(num);var from=isFloat?parseFloat($settings.from):$settings.from;var decimalPlaces=isFloat?(num.split('.')[1]||[]).length:0;for(var i=divisions;i>1;i--){var newNum=Math.round(((num-from)/divisions*i)+from);if(isFloat){newNum=parseFloat(((num-from)/divisions*i)+from).toFixed(decimalPlaces)}
if(isComma){while(/(\d+)(\d{3})/.test(newNum.toString())){newNum=newNum.toString().replace(/(\d+)(\d{3})/,'$1'+','+'$2')}}
if(settings.formatter){newNum=settings.formatter.call(this,newNum)}
nums.unshift(newNum)}
$this.data('counterup-nums',nums);$this.text(from);var f=function(){if(!$this.data('counterup-nums')){return}
$this.text($this.data('counterup-nums').shift());if($this.data('counterup-nums').length){setTimeout($this.data('counterup-func'),$settings.delay)}else{delete $this.data('counterup-nums');$this.data('counterup-nums',null);$this.data('counterup-func',null)}};$this.data('counterup-func',f);setTimeout($this.data('counterup-func'),$settings.delay)};$this.waypoint(counterUpper,{offset:'100%',triggerOnce:!0})})}})(jQuery)
